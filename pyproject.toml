[tool.poetry]
name = "odooghost"
version = "0.9.0"
description = "Odoo developpement made easy"
authors = ["Remy Zulauff <remy.zulauff@gmail.com>"]
readme = "README.md"
homepage = "https://remyz17.github.io/odooghost/"
repository = "https://github.com/remyz17/odooghost"
license = "MIT"
include = ["odooghost/web/dist/**/*"]

[tool.poetry.dependencies]
python = "^3.9"
typer = { extras = ["all"], version = "^0.9.0" }
loguru = "^0.7.0"
pydantic = { extras = ["dotenv"], version = "^2.0.3" }
docker = "7.1.0"
jinja2 = "^3.1.2"
strawberry-graphql = { extras = ["asgi"], version = "^0.205.0" }
uvicorn = { extras = ["standard"], version = "^0.23.2" }
dockerpty = "^0.4.1"
gitpython = "^3.1.40"
giturlparse = "^0.12.0"
pyyaml = "^6.0.1"

[tool.poetry.group.lint.dependencies]
isort = "^5.12.0"
black = "^23.3.0"
mypy = "^1.4.0"
ruff = "^0.0.284"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
setuptools = "^68.0.0"
bandit = "^1.7.5"
isort = "^5.12.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.3"
mkdocs-material = "^9.1.17"
mkdocstrings = { extras = ["python"], version = "^0.22.0" }

[tool.poetry.group.semver.dependencies]
python-semantic-release = "^8.0.8"

[tool.isort]
profile = "black"

[tool.bandit]
exclude_dirs = ["tests", "web"]
skips = ["B602", "B607"]

[tool.ruff]
src = ["odooghost", "tests"]
ignore = ["E501", "E203"]
line-length = 88

[tool.mypy]
# 3rd party import
ignore_missing_imports = true
# dynamic typing
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = true
# platform
python_version = "3.11"
# untyped
disallow_untyped_calls = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = true
# None and Optional
no_implicit_optional = true
# Warnings
warn_return_any = false
warn_unreachable = true
# Misc
pretty = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:cacheprovider"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = ["odooghost/__init__.py:__version__"]
assets = []
commit_message = "{version} [skip ci]\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
build_command = "poetry build -n"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "beta"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    "^Merge branch '.*'$",
    "^Merge pull request #.* from .*$",
]

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
    "merge",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
ignore_token_for_push = true

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.poetry.scripts]
odooghost = "odooghost.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
